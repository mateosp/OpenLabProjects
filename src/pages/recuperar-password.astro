---
import BaseLayout from '../layouts/BaseLayout.astro';
---

<BaseLayout title="Recuperar Contraseña">
  <div class="flex min-h-[calc(100vh-64px)] bg-gray-50 dark:bg-gray-900">
    <div class="flex flex-1 flex-col justify-center px-4 py-12 sm:px-6 lg:flex-none lg:px-20 xl:px-24">
      <div class="mx-auto w-full max-w-sm lg:w-96">
        <div>
          <h2 class="mt-8 text-2xl font-bold leading-9 tracking-tight text-gray-900 dark:text-white">Recuperar contraseña</h2>
          <p class="mt-2 text-sm leading-6 text-gray-500 dark:text-gray-400">
            Ingresa tu correo electrónico y te enviaremos un enlace para restablecer tu contraseña.
          </p>
        </div>

        <div class="mt-10">
          <div>
            <form id="reset-form" class="space-y-6">
              <div>
                <label for="email" class="block text-sm font-medium leading-6 text-gray-900 dark:text-white">
                  Correo electrónico
                </label>
                <div class="mt-2">
                  <input
                    id="email"
                    name="email"
                    type="email"
                    autocomplete="email"
                    required
                    class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 dark:bg-gray-800 dark:text-white dark:ring-gray-700 dark:focus:ring-indigo-500 sm:text-sm sm:leading-6"
                  />
                </div>
              </div>

              <div>
                <button
                  type="submit"
                  class="flex w-full justify-center rounded-md bg-indigo-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600 dark:bg-indigo-500 dark:hover:bg-indigo-400"
                >
                  Enviar enlace de recuperación
                </button>
              </div>
            </form>

            <!-- Mensaje de estado -->
            <div id="status-message" class="mt-4 hidden">
              <p class="text-sm"></p>
            </div>

            <p class="mt-10 text-center text-sm text-gray-500 dark:text-gray-400">
              ¿Recordaste tu contraseña?
              <a href="/login" class="font-semibold leading-6 text-indigo-600 hover:text-indigo-500 dark:text-indigo-400 dark:hover:text-indigo-300">
                Volver al inicio de sesión
              </a>
            </p>
          </div>
        </div>
      </div>
    </div>
    <div class="relative hidden w-0 flex-1 lg:block">
      <img
        class="absolute inset-0 h-full w-full object-cover"
        src="https://images.unsplash.com/photo-1496917756835-20cb06e75b4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1908&q=80"
        alt=""
      />
    </div>
  </div>
</BaseLayout>

<script>
  import { auth } from '../utils/firebase.js';
  import { sendPasswordResetEmail } from 'firebase/auth';

  const resetForm = document.getElementById('reset-form') as HTMLFormElement;
  const statusMessage = document.getElementById('status-message');

  if (!resetForm || !statusMessage) {
    throw new Error('Elementos del formulario no encontrados');
  }

  function showStatus(message: string, isError = false) {
    if (!statusMessage) return;

    const messageP = statusMessage.querySelector('p');
    if (!messageP) return;

    messageP.textContent = message;
    messageP.className = `text-sm ${isError ? 'text-red-500' : 'text-green-500'}`;
    statusMessage.classList.remove('hidden');
  }

  resetForm.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const emailInput = resetForm.querySelector('#email') as HTMLInputElement;
    const email = emailInput.value.trim();

    try {
      await sendPasswordResetEmail(auth, email);
      showStatus('Se ha enviado un enlace de recuperación a tu correo electrónico. Por favor, revisa tu bandeja de entrada.');
      resetForm.reset();
    } catch (error: any) {
      console.error('Error al enviar el correo de recuperación:', error);
      let errorMessage = 'Error al enviar el correo de recuperación.';
      
      switch (error.code) {
        case 'auth/invalid-email':
          errorMessage = 'El correo electrónico no es válido.';
          break;
        case 'auth/user-not-found':
          errorMessage = 'No existe una cuenta con este correo electrónico.';
          break;
        case 'auth/too-many-requests':
          errorMessage = 'Has realizado demasiados intentos. Por favor, intenta más tarde.';
          break;
      }
      
      showStatus(errorMessage, true);
    }
  });
</script> 